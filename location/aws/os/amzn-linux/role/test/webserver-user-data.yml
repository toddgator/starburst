#cloud-config

# Set the hostname and FQDN
preserve_hostname: false
hostname: "aws-dev-web-01"
fqdn: "aws-dev-web-01.aws.thig.com"
manage_etc_hosts: true

repo_update: true
repo_upgrade: all
repo_upgrade_exclude:
  - kernel
  - nvidia*
  - cudatoolkit

# Upgrade system packages
package_upgrade: true

# Packages to install

packages:
  - awscli
  - httpd
  - php

users:
  - name: todd
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    groups: sudo
    shell: /bin/bash

# Write a script that executes on every boot and sets a DNS entry pointing to
# this instance. This requires the instance having an appropriate IAM role set,
# so it has permission to perform the changes to Route53.
write_files:
  - content: |
      #!/bin/sh
      FQDN=`hostname -f`
      ZONE_ID="Z1BBU82596BKRQ"
      TTL=300
      SELF_META_URL="http://169.254.169.254/latest/meta-data"
      PRIVATE_DNS=$(curl ${SELF_META_URL}/local-ipv4 2>/dev/null)

      cat << EOT > /tmp/aws_r53_batch.json
      {
        "Comment": "Assign AWS Private DNS A record",
        "Changes": [
          {
            "Action": "UPSERT",
            "ResourceRecordSet": {
              "Name": "${FQDN}.",
              "Type": "A",
              "TTL": ${TTL},
              "ResourceRecords": [
                {
                  "Value": "${PRIVATE_DNS}"
                }
              ]
            }
          }
        ]
      }
      EOT

      aws route53 change-resource-record-sets --hosted-zone-id ${ZONE_ID} --change-batch file:///tmp/aws_r53_batch.json
      rm -f /tmp/aws_r53_batch.json
    path: /var/lib/cloud/scripts/per-boot/set_route53_dns.sh
    permissions: 0755

final_message: "Build-boot has completed after ${UPTIME} seconds"